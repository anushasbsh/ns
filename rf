import java.util.*;

class rf {

    static String encrypt(String text, int key) {
        char[][] rail = new char[key][text.length()];
        boolean directionDown = false;
        int row = 0;

        for (int i = 0; i < text.length(); i++) {
            if (row == 0 || row == key - 1) directionDown = !directionDown;

            rail[row][i] = text.charAt(i);

            row += directionDown ? 1 : -1;
        }

        StringBuilder result = new StringBuilder();
        for (int i = 0; i < key; i++) {
            for (int j = 0; j < text.length(); j++) {
                if (rail[i][j] != 0) result.append(rail[i][j]);
            }
        }

        return result.toString();
    }
    static String decrypt(String text, int key) {
        char[][] rail = new char[key][text.length()];
        boolean directionDown = false;
        int row = 0;

        for (int i = 0; i < text.length(); i++) {
            if (row == 0 || row == key - 1) directionDown = !directionDown;

            rail[row][i] = '*';
            row += directionDown ? 1 : -1;
        }

        int index = 0;
        for (int i = 0; i < key; i++) {
            for (int j = 0; j < text.length(); j++) {
                if (rail[i][j] == '*' && index < text.length()) {
                    rail[i][j] = text.charAt(index++);
                }
            }
        }

        StringBuilder result = new StringBuilder();
        row = 0;
        directionDown = false;
        for (int i = 0; i < text.length(); i++) {
            if (row == 0 || row == key - 1) directionDown = !directionDown;

            result.append(rail[row][i]);
            row += directionDown ? 1 : -1;
        }

        return result.toString();
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the string: ");
        String plainText = sc.nextLine();
        System.out.println("Enter the key: ");
        int key = sc.nextInt();

        String encryptedText = encrypt(plainText, key);
        String decryptedText = decrypt(encryptedText, key);

        System.out.println("Plain Text: " + plainText);
        System.out.println("Encrypted Text: " + encryptedText);
        System.out.println("Decrypted Text: " + decryptedText);
    }
}